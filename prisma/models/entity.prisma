
model Entity {

    id                      Int @id @default(autoincrement())
    registerDate            String

    image                   String?
    state                   String?
    classification          String?
    creditLimit             Float?
    commission              Float?
    antt                    String?
    category                String?
    accountingCategory      String?
    municipalInscription    String?
    range                   String?
    suframaInscription      String?
    route                   String?
    cnae                    String?

    finalConsumer           Boolean? @default(false)
    client                  Boolean? @default(false)
    transportCompany        Boolean? @default(false)
    supplier                Boolean? @default(false)
    employee                Boolean? @default(false)
    salesman                Boolean? @default(false)
    icmsExemption           Boolean? @default(false)
    icmsContributor         Boolean? @default(false)
    simpleFederalOptant     Boolean? @default(false)
    nfeb2b                  Boolean? @default(false)
    
    physicalEntitynId        Int?
    physicalEntity          PhysicalEntity?
    judiciaryEntityId       Int?
    judiciaryEntity         JudiciaryEntity?

}

model PhysicalEntity {

    id                      Int     @id @default(autoincrement())
    name                    String
    nickname                String
    cpf                     String
    rg                      String
    gender                  String
    birthCity               String
    birthDate               String

    entity                  Entity  @relation(fields: [entityId], references: [id], onDelete: Cascade)
    entityId                Int     @unique

}

model JudiciaryEntity {

    id                      Int @id @default(autoincrement())
    socialReason            String
    fantasyName             String
    headquarters            String
    foundingDate            String	

    entity                  Entity  @relation(fields: [entityId], references: [id], onDelete: Cascade)
    entityId                Int     @unique

}
