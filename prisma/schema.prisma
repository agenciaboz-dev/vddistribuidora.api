// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
	provider = "mysql"
	url = env("DATABASE_URL")
}
generator client {
	provider = "prisma-client-js"
	previewFeatures = ["fullTextSearch","fullTextIndex"]
}
model User {
	id Int @id @default(autoincrement())
	name String 
	email String @unique
	cpf String @unique
	phone String 
	password String 
}
model Entity {
	id Int @id @default(autoincrement())
	registerDate String 
	image String? 
	state String? 
	classification String? 
	creditLimit Float? 
	commission Float? 
	antt String? 
	category String? 
	accountingCategory String? 
	municipalInscription String? 
	range String? 
	suframaInscription String? 
	route String? 
	cnae String? 
	finalConsumer Boolean? @default(false)
	client Boolean? @default(false)
	transportCompany Boolean? @default(false)
	supplier Boolean? @default(false)
	employee Boolean? @default(false)
	salesman Boolean? @default(false)
	icmsExemption Boolean? @default(false)
	icmsContributor Boolean? @default(false)
	simpleFederalOptant Boolean? @default(false)
	nfeb2b Boolean? @default(false)
	physicalEntitynId Int? 
	physicalEntity PhysicalEntity? @relation(name: "EntityToPhysicalEntity")
	judiciaryEntityId Int? 
	judiciaryEntity JudiciaryEntity? @relation(name: "EntityToJudiciaryEntity")
	addresses Address[] @relation(name: "AddressToEntity")
}
model PhysicalEntity {
	id Int @id @default(autoincrement())
	name String 
	nickname String 
	cpf String 
	rg String 
	gender String 
	birthCity String 
	birthDate String 
	entity Entity @relation(name: "EntityToPhysicalEntity", fields: [entityId], references: [id], onDelete: Cascade)
	entityId Int @unique
}
model JudiciaryEntity {
	id Int @id @default(autoincrement())
	socialReason String 
	fantasyName String 
	headquarters String 
	foundingDate String 
	entity Entity @relation(name: "EntityToJudiciaryEntity", fields: [entityId], references: [id], onDelete: Cascade)
	entityId Int @unique
}
model Address {
	id Int @id @default(autoincrement())
	cep String 
	street String 
	number String 
	district String 
	uf String 
	city String 
	entityId Int 
	entity Entity @relation(name: "AddressToEntity", fields: [entityId], references: [id], onDelete: Cascade)
}