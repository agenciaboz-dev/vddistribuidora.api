// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
	provider = "mysql"
	url = env("DATABASE_URL")
}
generator client {
	provider = "prisma-client-js"
	previewFeatures = ["fullTextSearch","fullTextIndex"]
}
model User {
	id Int @id @default(autoincrement())
	name String 
	email String @unique
	cpf String @unique
	phone String 
	password String 
}
model Entity {
	id Int @id @default(autoincrement())
	registerDate String 
	image String? 
	state String? 
	classification String? 
	creditLimit Float? 
	commission Float? 
	antt String? 
	category String? 
	accountingCategory String? 
	municipalInscription String? 
	range String? 
	suframaInscription String? 
	route String? 
	cnae String? 
	finalConsumer Boolean? @default(false)
	client Boolean? @default(false)
	transportCompany Boolean? @default(false)
	supplier Boolean? @default(false)
	employee Boolean? @default(false)
	salesman Boolean? @default(false)
	icmsExemption Boolean? @default(false)
	icmsContributor Boolean? @default(false)
	simpleFederalOptant Boolean? @default(false)
	nfeb2b Boolean? @default(false)
	physicalEntitynId Int? 
	physicalEntity PhysicalEntity? @relation(name: "EntityToPhysicalEntity")
	judiciaryEntityId Int? 
	judiciaryEntity JudiciaryEntity? @relation(name: "EntityToJudiciaryEntity")
	addresses Address[] @relation(name: "AddressToEntity")
}
model PhysicalEntity {
	id Int @id @default(autoincrement())
	name String 
	nickname String 
	cpf String 
	rg String 
	gender String 
	birthCity String 
	birthDate String 
	entity Entity @relation(name: "EntityToPhysicalEntity", fields: [entityId], references: [id], onDelete: Cascade)
	entityId Int @unique
}
model JudiciaryEntity {
	id Int @id @default(autoincrement())
	socialReason String 
	cnpj String 
	fantasyName String 
	headquarters String 
	foundingDate String 
	entity Entity @relation(name: "EntityToJudiciaryEntity", fields: [entityId], references: [id], onDelete: Cascade)
	entityId Int @unique
}
model Address {
	id Int @id @default(autoincrement())
	cep String 
	street String 
	number String 
	district String 
	uf String 
	city String 
	entityId Int 
	entity Entity @relation(name: "AddressToEntity", fields: [entityId], references: [id], onDelete: Cascade)
}
model Packaging {
	id Int @id @default(autoincrement())
	name String 
	description String 
	image String 
}
model ProductStock {
	id Int @id @default(autoincrement())
	units String 
	weightCcm3 String 
	massGrams String 
	volumeCm3 String 
	productionToleranceType String 
	percentageProductTolerance String 
	stockConfig String 
	minQuantity String 
	baseCostValue String 
	estimatedCost String 
	suggestedCost String 
	productId Int 
	product Product @relation(name: "ProductToProductStock", fields: [productId], references: [id])
	stockLocationId Int 
	stockLocation StockLocation @relation(name: "ProductStockToStockLocation", fields: [stockLocationId], references: [id])
}
model StockLocation {
	id Int @id @default(autoincrement())
	name String 
	cep String 
	street String 
	state String 
	city String 
	district String 
	productStock ProductStock[] @relation(name: "ProductStockToStockLocation")
}
model Product {
	id Int @id @default(autoincrement())
	productStock ProductStock[] @relation(name: "ProductToProductStock")
	name String 
	description String 
	image String 
	drawingModel String 
	unit String 
	features String 
	brand String? 
	category String? 
	subcategory String? 
	unitMeasure String? 
	sku String? 
	validity String? 
	liqWeight String? 
	grossWeight String? 
	mass String? 
	volume String? 
	receipt ProductReceipt[] @relation(name: "ProductToProductReceipt")
}
model ProductReceipt {
	id Int @id @default(autoincrement())
	number String 
	productCode String 
	receiptDescription String 
	cfop String 
	ncm String 
	commercialUnit String 
	tributaryUnit String 
	commercialQuantity String 
	tributaryQuantity String 
	commercialUnitValue String 
	tributaryUnitValue String 
	grossValue String 
	icmsOrigin String 
	additionalInfo String 
	productId Int 
	product Product @relation(name: "ProductToProductReceipt", fields: [productId], references: [id])
}