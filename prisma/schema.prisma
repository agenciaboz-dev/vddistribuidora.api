// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
	provider = "mysql"
	url = env("DATABASE_URL")
}
generator client {
	provider = "prisma-client-js"
	previewFeatures = ["fullTextSearch","fullTextIndex"]
}
model User {
	id Int @id @default(autoincrement())
	name String 
	email String @unique
	cpf String @unique
	phone String 
	password String 
	role Role @default(CLIENT)
}
model Person {
	id Int @id @default(autoincrement())
	registerDate String 
	image String? 
	state String? 
	classification String? 
	creditLimit Float? 
	commission Float? 
	antt String? 
	category String? 
	accountingCategory String? 
	municipalInscription String? 
	range String? 
	suframaInscription String? 
	route String? 
	cnae String? 
	finalConsumer Boolean? @default(false)
	client Boolean? @default(false)
	transportCompany Boolean? @default(false)
	supplier Boolean? @default(false)
	employee Boolean? @default(false)
	salesman Boolean? @default(false)
	icmsExemption Boolean? @default(false)
	icmsContributor Boolean? @default(false)
	simpleFederalOptant Boolean? @default(false)
	nfeb2b Boolean? @default(false)
	physicalPersonId Int? 
	physicalPerson PhysicalPerson? @relation(name: "PersonToPhysicalPerson")
	judiciaryPersonId Int? 
	judiciaryPerson JudiciaryPerson? @relation(name: "JudiciaryPersonToPerson")
	addresses Address[] @relation(name: "AddressToPerson")
}
model PhysicalPerson {
	id Int @id @default(autoincrement())
	name String 
	nickname String 
	cpf String 
	rg String 
	gender String 
	birthCity String 
	birthDate String 
	person Person @relation(name: "PersonToPhysicalPerson", fields: [personId], references: [id], onDelete: Cascade)
	personId Int @unique
}
model JudiciaryPerson {
	id Int @id @default(autoincrement())
	socialReason String 
	fantasyName String 
	headquarters String 
	foundingDate String 
	person Person @relation(name: "JudiciaryPersonToPerson", fields: [personId], references: [id], onDelete: Cascade)
	personId Int @unique
}
model Address {
	id Int @id @default(autoincrement())
	cep String 
	street String 
	number String 
	district String 
	uf String 
	city String 
	personId Int 
	person Person @relation(name: "AddressToPerson", fields: [personId], references: [id], onDelete: Cascade)
}
enum Role {
	ADMIN
	SALES
	MANAGER
	ACCOUNTANT
	CLIENT
}